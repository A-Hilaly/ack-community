components:
  schemas:
    CreateTopicInput:
      properties:
        Attributes:
          $ref: '#/components/schemas/TopicAttributesMap'
        Name:
          $ref: '#/components/schemas/topicName'
        Tags:
          $ref: '#/components/schemas/TagList'
      required:
      - Name
      type: object
    CreateTopicResponse:
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
      type: object
    DeleteTopicInput:
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
      required:
      - TopicArn
      type: object
    GetTopicAttributesInput:
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
      required:
      - TopicArn
      type: object
    GetTopicAttributesResponse:
      properties:
        Attributes:
          $ref: '#/components/schemas/TopicAttributesMap'
      type: object
    InternalErrorException:
      properties:
        message:
          $ref: '#/components/schemas/string'
      type: object
      x-aws-api-exception: true
    InvalidParameterException:
      properties:
        message:
          $ref: '#/components/schemas/string'
      type: object
      x-aws-api-exception: true
    InvalidSecurityException:
      properties:
        message:
          $ref: '#/components/schemas/string'
      type: object
      x-aws-api-exception: true
    ListTopicsInput:
      properties:
        NextToken:
          $ref: '#/components/schemas/nextToken'
      type: object
    ListTopicsResponse:
      properties:
        NextToken:
          $ref: '#/components/schemas/nextToken'
        Topics:
          $ref: '#/components/schemas/TopicsList'
      type: object
    MapStringToString:
      additionalProperties: true
      type: object
    NotFoundException:
      properties:
        message:
          $ref: '#/components/schemas/string'
      type: object
      x-aws-api-exception: true
    ResourceNotFoundException:
      properties:
        message:
          $ref: '#/components/schemas/string'
      type: object
      x-aws-api-exception: true
    SetTopicAttributesInput:
      properties:
        AttributeName:
          $ref: '#/components/schemas/attributeName'
        AttributeValue:
          $ref: '#/components/schemas/attributeValue'
        TopicArn:
          $ref: '#/components/schemas/topicARN'
      required:
      - TopicArn
      - AttributeName
      type: object
    StaleTagException:
      properties:
        message:
          $ref: '#/components/schemas/string'
      type: object
      x-aws-api-exception: true
    String:
      type: string
    Tag:
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
        Value:
          $ref: '#/components/schemas/TagValue'
      required:
      - Key
      - Value
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    TagLimitExceededException:
      properties:
        message:
          $ref: '#/components/schemas/string'
      type: object
      x-aws-api-exception: true
    TagList:
      items:
        properties:
          Key:
            $ref: '#/components/schemas/TagKey'
          Value:
            $ref: '#/components/schemas/TagValue'
        required:
        - Key
        - Value
        type: object
      type: array
    TagPolicyException:
      properties:
        message:
          $ref: '#/components/schemas/string'
      type: object
      x-aws-api-exception: true
    TagValue:
      maxLength: 256
      type: string
    Topic:
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
      type: object
    TopicAttributesMap:
      additionalProperties: true
      type: object
    TopicLimitExceededException:
      properties:
        message:
          $ref: '#/components/schemas/string'
      type: object
      x-aws-api-exception: true
    TopicsList:
      items:
        properties:
          TopicArn:
            $ref: '#/components/schemas/topicARN'
        type: object
      type: array
    attributeName:
      type: string
    attributeValue:
      type: string
    nextToken:
      type: string
    string:
      type: string
    topicARN:
      type: string
    topicName:
      type: string
info:
  description: example API that just operates on SNS-like Topic resources
  title: example Topic API
  version: "9999-99-99"
  x-aws-api-alias: topic
  x-aws-api-protocol: query
openapi: 3.0.0
paths:
  /#CreateTopic:
    post:
      operationId: CreateTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTopicInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTopicResponse'
        "400":
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/InvalidParameterException'
                - $ref: '#/components/schemas/TagLimitExceededException'
                - $ref: '#/components/schemas/StaleTagException'
                - $ref: '#/components/schemas/TagPolicyException'
        "403":
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/TopicLimitExceededException'
                - $ref: '#/components/schemas/InvalidSecurityException'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
  /#DeleteTopic:
    post:
      operationId: DeleteTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTopicInput'
      responses: null
  /#GetTopicAttributes:
    post:
      operationId: GetTopicAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTopicAttributesInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTopicAttributesResponse'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
  /#ListTopics:
    post:
      operationId: ListTopics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTopicsInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
  /#SetTopicAttributes:
    post:
      operationId: SetTopicAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTopicAttributesInput'
      responses: null
